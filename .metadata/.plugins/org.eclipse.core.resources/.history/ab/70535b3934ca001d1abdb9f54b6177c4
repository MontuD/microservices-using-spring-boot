package com.example.libraryadmin.services;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Optional;

import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.example.libraryadmin.dto.BookDTO;
import com.example.libraryadmin.dto.UserDTO;

@Service
public class LibraryAdminService {
	
	private  RestTemplate restTemplate;
	private final String HOST = "http://localhost:8080/api/user/";
	
	
	LibraryAdminService(){
		this.restTemplate = new RestTemplate();
		
	}


	public Optional<UserDTO> createUser(UserDTO user){
		
		ResponseEntity<UserDTO> entity = restTemplate.postForEntity(HOST+"/add", user, UserDTO.class);
		
		System.out.print(entity.getStatusCode());
		
		return Optional.ofNullable(entity.getBody());
	}
	
	
	public Optional<BookDTO> addBookToLibrary(BookDTO book){
		
		ResponseEntity<BookDTO> entity = restTemplate.
				postForEntity("http://localhost:8083/api/book/add",
				book,
				BookDTO.class);
		System.out.print(entity.getStatusCode());
		return Optional.ofNullable(entity.getBody());
	}
	
	
	public Optional<List<BookDTO>> getAllBooks(){
		
		ResponseEntity<List<BookDTO>> entity = restTemplate.
				getForEntity("http://localhost:8083/api/book/getallbooks",
				null,
				List.class);
		System.out.print(entity.getStatusCode());
			
		return Optional.ofNullable(entity.getBody());
	}
	
	public Optional<List<BookDTO>> getBooksByAuthor(){
		
		ResponseEntity<List<BookDTO>> entity = restTemplate.
				getForEntity("http://localhost:8083/api/book/getallbooks",
				null,
				List.class);
		System.out.print(entity.getStatusCode());

		return Optional.ofNullable(entity.getBody());
	}
	
	public Optional<List<BookDTO>> getBooksByBookName(){
			
			ResponseEntity<List<BookDTO>> entity = restTemplate.
					getForEntity("http://localhost:8083/api/book/getbooksbybookname",
					null,
					List.class);
			System.out.print(entity.getStatusCode());
	
			return Optional.ofNullable(entity.getBody());
		}
	


	public Optional<List<BookDTO>> addBooksToDatabase(List<BookDTO> book){
		ResponseEntity<BookDTO> entity = restTemplate.
				postForEntity("http://localhost:8083/api/book/addbooks",
				book,
				List.class);
		System.out.print(entity.getStatusCode());
		return Optional.ofNullable(entity.getBody());
	}

	
}
